#!/usr/bin/env python2

import os
import subprocess
from gi.repository import Gtk, Gio, Gdk, GObject

Gdk.threads_init()

class YD(Gtk.Application):
    def __init__(self):
        Gtk.Application.__init__(self, application_id="apps.yd.yd",
                flags=Gio.ApplicationFlags.NON_UNIQUE)
        self.connect("activate", self.on_activate)

    def on_activate(self, data=None):
        self.w = Gtk.Window(type=Gtk.WindowType.TOPLEVEL)
        self.w.set_title("YD")
        vb = Gtk.VBox()
        vb.set_spacing(6)

        info_box = Gtk.VBox()
        self.info = Gtk.InfoBar()
        self.info.set_no_show_all(True)
        self.info_message = Gtk.Label("")
        self.info_message.show()
        self.info.get_content_area().pack_start(self.info_message, True, True, True)
        self.info.add_button(Gtk.STOCK_OK, Gtk.ResponseType.OK)
        self.info.connect("response", self.dismiss_info)
        info_box.add(self.info)

        url_box = Gtk.Frame(label="URL...")
        self.url_entry = Gtk.Entry()
        self.url_entry.connect("activate", self.on_download_action)
        url_box.add(self.url_entry)

        path_box = Gtk.Frame(label="Destination folder...")
        self.path_button = Gtk.FileChooserButton(action=Gtk.FileChooserAction.SELECT_FOLDER)
        self.path_button.set_current_folder(os.environ["HOME"])
        path_box.add(self.path_button)

        action_frame = Gtk.Frame()
        actions_box = Gtk.VBox()
        self.only_audio_check = Gtk.CheckButton("Audio only?")
        actions_box.pack_start(self.only_audio_check, False, False, False)
        download_button = Gtk.Button("Download")
        download_button.connect("clicked", self.on_download_action)
        actions_box.pack_start(download_button, False, False, False)
        action_frame.add(actions_box)

        vb.pack_start(info_box, True, True, True)
        vb.pack_start(url_box, False, False, False)
        vb.pack_start(path_box, False, False, False)
        vb.pack_start(action_frame, False, False, False)
        self.w.add(vb)
        self.w.show_all()
        self.width, self.height = self.w.get_size()
        self.add_window(self.w)

    def dismiss_info(self, *args):
        self.info.hide()
        self.w.resize(self.width, self.height)

    def download(self):
        call = ["youtube-dl",
            "-t",
            self.url_entry.get_text()]

        if self.only_audio_check.get_active() == True:
            call.insert(-1, "--extract-audio")
            call.insert(-1, "--audio-format=mp3")

        subprocess.call(call, cwd=self.path_button.get_filename())
        self.info_message.set_text("Video downloaded")
        self.info.set_message_type(Gtk.MessageType.INFO)
        self.info.show()

    def on_download_action(self, event=None):
        GObject.idle_add(self.download)

if __name__ == "__main__":
    YD().run(None)
